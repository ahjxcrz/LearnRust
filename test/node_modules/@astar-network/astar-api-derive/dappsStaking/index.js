"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.stakers = exports.getAddressEnum = void 0;
const rxjs_1 = require("rxjs");
const util_1 = require("@polkadot/api-derive/util");
const getAddressEnum = (address) => ({ Evm: address });
exports.getAddressEnum = getAddressEnum;
/**
 * @deprecated stakers does not return results
 */
function stakers(instanceId, api) {
    return (0, util_1.memo)(instanceId, (contractAddress) => api.query.dappsStaking.contractEraStake.entries(contractAddress).pipe((0, rxjs_1.map)((res) => {
        const stakers = [];
        // TODO this is inefficient. Expect performance to decrease as chain gets longer.
        for (const eraInfo of res) {
            if (eraInfo[1].unwrap().stakers) {
                const eraStakers = Array.from(eraInfo[1].unwrap().stakers.keys());
                for (const staker of eraStakers) {
                    if (!stakers.includes(staker)) {
                        stakers.push(staker);
                    }
                }
            }
        }
        return stakers;
    })));
}
exports.stakers = stakers;
